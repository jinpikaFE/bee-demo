{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API\n",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/test/": {
            "get": {
                "tags": [
                    "test"
                ]
            },
            "post": {
                "tags": [
                    "test"
                ],
                "description": "创建test\n\u003cbr\u003e",
                "operationId": "TestController.创建test",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for test content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Test"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.User"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/test/{id}": {
            "get": {
                "tags": [
                    "test"
                ]
            },
            "put": {
                "tags": [
                    "test"
                ]
            },
            "delete": {
                "tags": [
                    "test"
                ]
            }
        }
    },
    "definitions": {
        "models.Test": {
            "title": "Test",
            "type": "object",
            "properties": {
                "Age": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                }
            }
        }
    }
}